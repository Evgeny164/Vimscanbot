import logging
import json
import aiohttp
import os
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor

# Telegram —Ç–æ–∫–µ–Ω
bot = Bot(token=os.environ["BOT_TOKEN"])
dp = Dispatcher(bot)

# GitHub JSON —Å –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π
VITAMINS_URL = "https://raw.githubusercontent.com/Evgeny164/Vimscanbot/main/knowledge/vitamins.json"
vitamin_knowledge = {}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã
@dp.message_handler(commands=["–æ–±–Ω–æ–≤–∏—Ç—å_–±–∞–∑—É"])
async def update_base(message: types.Message):
    global vitamin_knowledge
    print("üì• –ó–∞–≥—Ä—É–∂–∞—é –±–∞–∑—É –≤–∏—Ç–∞–º–∏–Ω–æ–≤...")
    async with aiohttp.ClientSession() as session:
        async with session.get(VITAMINS_URL) as resp:
            if resp.status == 200:
                text = await resp.text()
                vitamin_knowledge = json.loads(text)
                print("‚úÖ –ë–∞–∑–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞")
                await message.reply("‚úÖ –ë–∞–∑–∞ –≤–∏—Ç–∞–º–∏–Ω–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—É")
                await message.reply("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑—ã.")

# –û—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å –æ –≤–∏—Ç–∞–º–∏–Ω–µ
@dp.message_handler(lambda msg: msg.text.lower().startswith("–≤–∏—Ç–∞–º–∏–Ω"))
async def reply_about_vitamin(message: types.Message):
    query = message.text.lower().strip()
    print(f"üîé –ó–∞–ø—Ä–æ—Å: {query}")
    for name, info in vitamin_knowledge.items():
        if query in name.lower():
            reply = f"üíä *{name}*\n"
            for key, value in info.items():
                reply += f"‚Ä¢ **{key.capitalize()}**: {value}\n"
            await message.reply(reply, parse_mode="Markdown")
            return
    await message.reply("–ù–µ –Ω–∞—à—ë–ª —Ç–∞–∫–æ–≥–æ –≤–∏—Ç–∞–º–∏–Ω–∞ üòî")

# –°—Ç–∞—Ä—Ç
if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    executor.start_polling(dp, skip_updates=True) 
